
-- для получения флагов установленных аддонов
-- комплектом
function get_addon_flags( obj )
  local pk = get_netpk( obj, 2 )
  ASSERT( ( pk and pk:isOk() ), "can't read netpacket of %s", obj:name() )
  local data = pk:get()
  ASSERT( data.upd and data.upd.addon_flags, "addon_flags not found in [%s]", obj:name() )
  return data.upd.addon_flags
end
-- прицел
function get_scope_flag( obj )
	return bit_and( get_addon_flags( obj ), addon_flags.scope ) ~= 0
end
-- подствольник
function get_grenade_launcher_flag( obj )
	return bit_and( get_addon_flags( obj ), addon_flags.launcher ) ~= 0
end
-- глушитель
function get_silencer_flag(obj)
	return bit_and( get_addon_flags( obj ), addon_flags.silencer) ~= 0
end

-- для получения режима подствольника
function get_gl_mode( obj ) 
	local pk = get_netpk( obj, 2 )
	ASSERT( ( pk and pk:isOk() ), "can't read netpacket of %s", obj:name() )
	local data = pk:get()
	ASSERT( data.upd and data.upd.grenade_mode, "[get_gl_mode] [%s] function is only applicable to objects of 'CWeaponMagazinedWGrenade' type!", obj:name() )
	return data.upd.grenade_mode ~= 0
end

-- индекс типа патронов для текущего типа зарядов
function get_active_ammo_type( obj ) 
	local pk = get_netpk( obj, 2 )
	ASSERT( ( pk and pk:isOk() ), "can't read netpacket of %s", obj:name() )
	local data = pk:get()
	ASSERT( data.upd and data.upd.ammo_type, "ammo_type not found in [%s]", obj:name() )
	return data.upd.ammo_type
end

--Получить кол-во патронов в пачке.
--Надо потестить, говорят что глючно работает. Надо городить движковую функцию.
function get_ammo_size( obj )
	local pk = get_netpk( obj, 2 )
	ASSERT( ( pk and pk:isOk() ), "can't read netpacket of %s", obj:name() )
	local data = pk:get()
	ASSERT( data.upd and data.upd.ammo_left, "ammo_left not found in [%s]", obj:name() )
	return data.upd.ammo_left
end

function switch_online_offline_online(id)
	alife():set_switch_online( id, false )
	alife():set_switch_offline( id, true )
	ogse_qt.wait_condition(
		function() return not level.object_by_id(id) end,
		function()
			alife():set_switch_online( id, true )
			alife():set_switch_offline( id, false )
		end
	)
end

--dsh mod

function clear_used_ai_locations( sobj )
  local pk = get_netpk( sobj, 1 )
  ASSERT( ( pk and pk:isOk() ), "can't read netpacket of %s", sobj:name() )
  local data = pk:get()
  data.object_flags = bit_and(
    data.object_flags, bit_not( object_flags.UsedAI_Locations )
  ) -- снять флаг flUsedAI_Locations
  pk:set( data )
end

--!!!Если выносить отсюда, надо учитывать что должна быть НЕ UTF кодировка скрипта!!!
function remove_quotes( s ) --Вырезать все кавычки из строки
  return s:gsub( "[«»\"\']", "" )
end
function strip_quotes( s ) --Срезать кавычки с начала и с конца строки
  --return string.gsub( s, '^[«»\"\']*(.-)[«»\"\']*$', '%1') --Срезает ВСЕ кавычки слева и справа.
  return s:gsub( '^[«»\"\'](.*)[«»\"\']$', '%1' ) --Срезает самую первую кавычку слева и самую последнюю кавычку справа.
end

--dsh mod - end

--ogse

-----------------------------------------------------------------------------------------------------------
local function fix_spawn_item_in_inv(obj, item_id, item_obj) --Фикс пропадания доспавненного предмета при сейв/лоаде
    obj:transfer_item(item_obj, obj)
end

--Спавним предметы в инвентарь актора, НПС, монстров, ящиков (поддерживаются и клиентские, и серверные объекты)
--ДЛЯ СПАВНА ПАТРОНОВ ИСПОЛЬЗОВАТЬ ОТДЕЛЬНУЮ ФУНКЦИЮ!!!
function spawn_item_in_inv(section, npc, num)
	npc = npc or db.actor
	num = num or 1
	local sobj
	local pid = type(npc.id) == "function" and npc:id() or npc.id
	local is_actor = pid == db.actor:id()
	local game_obj = level.object_by_id(pid)
	for i = 1, num do
		sobj = alife():create(section, vector(), 0, 0, pid)
		if not is_actor and game_obj then
			level.client_spawn_manager():add(sobj.id, -1, fix_spawn_item_in_inv, game_obj) --Фикс пропадания доспавненного предмета при сейв/лоаде
		end
	end
	if num == 1 then
		return alife():object(sobj.id)
	end
end

--Спавним патроны в инвентарь актора, НПС, монстров, ящиков (поддерживаются и клиентские, и серверные объекты)
function spawn_ammo_in_inv(section, num, npc)
	if num < 1 then return end

	npc = npc or db.actor
	local pid = type(npc.id) == "function" and npc:id() or npc.id
	local is_actor = pid == db.actor:id()
	local game_obj = level.object_by_id(pid)
	local num_in_box = get_u32(section, "box_size")
	while num > num_in_box or num > 0 do
		local sitem = alife():create_ammo(section, vector(), 0, 0, pid, num_in_box)
		if not is_actor and game_obj then
			level.client_spawn_manager():add(sitem.id, -1, fix_spawn_item_in_inv, game_obj) --Фикс пропадания доспавненного предмета при сейв/лоаде
		end
		num = num - num_in_box
	end
end
-----------------------------------------------------------------------------------------------------------

-- Удаляем объект из игры
function remove_item(item_to_remove)
	if item_to_remove then
		local sobj = alife():object(item_to_remove:id())
		if sobj then
			alife():release(sobj, true)
			return true
		end
	end
	return false
end

-- Удаляем предмет из инвентаря
function remove_item_from_inventory(remove_item, npc)
	npc = npc or db.actor
	local sobj = alife():object(remove_item:id())
	if sobj then
		alife():release(sobj, true)
	end
end

--ogse - end