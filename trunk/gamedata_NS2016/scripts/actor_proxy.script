--[[------------------------------------------------------------------------------------------------------------------
Класс "actor_proxy". Обеспечивает поддержку актёра, даже если он в офлайне.
Чугай Алексадр
--------------------------------------------------------------------------------------------------------------------]]
class "actor_proxy"

-- конструктор
function actor_proxy:__init()
	self.initialized = false
end

-- инициализация.
-- происходит только в момент первого после старта симулятора обращения.
function actor_proxy:init()
	if not self.initialized then
		self.online      = false
		self.alife       = alife()

		if self.alife then
			self.actor_id    = self.alife:actor().id
		end

		self.actor       = nil

		self.initialized = true
	end
end

-- деинициализация.
-- происходит в момент дерегистрации серверных объектов.
-- вызывается из se_smart_terrain:on_unregister() TODO remove this hack
function actor_proxy:deinit()
	if self.initialized then

		self.alife = nil
		self.actor = nil

		self.initialized = false
	end
end

-- Получение ID игрока
function actor_proxy:id()
	self:init()

	return self.actor_id
end

function actor_proxy:has_info( name )
	self:init()

	has_alife_info(name)
end

function actor_proxy:dont_has_info( name )
	self:init()

	if self.online then
		return not has_alife_info( name )
	else
		return not has_alife_info( self.actor_id, name )
	end
end

function actor_proxy.game_readsave()	
  local uFileSystem = getFS()
  local level_name
  if db.new_level == "" then
	  local flist = getFS():file_list_open_ex("$game_saves$",bit_or(bit_or(FS.FS_ListFiles,FS.FS_RootOnly), FS.FS_ClampExt) , "*.sav")
	  local f_cnt = flist:Size()
		flist:Sort(FS.FS_sort_by_modif_down)
		if f_cnt > 0 then
		  local file = flist:GetAt(0)
		  local sg = CSavedGameWrapper(file:NameFull())
		  level_name = sg:level_name()
		end
  else
	level_name = db.new_level
  end
  if level_name then
  local oFile = uFileSystem:update_path("$game_textures$","ui\\ui_load.dds")
  local sFile = uFileSystem:update_path("$game_textures$","intro\\"..level_name..".dds")
	uFileSystem:file_copy(sFile, oFile)
	db.new_level = ""
  end
end

function actor_proxy.game_NB()	
  local uFileSystem = getFS()
  local flist = uFileSystem:file_list_open("$game_textures$","intro\\nb\\",FS.FS_ListFiles)
  local f_cnt = flist:Size()
    if f_cnt > 0 then
	  local nmb=f_cnt-1
	  local rnd=math.random(1,nmb)
	  local oFile = uFileSystem:update_path("$game_textures$","intro\\empty.dds")
	  local sFile = uFileSystem:update_path("$game_textures$","intro\\nb\\nota_"..rnd..".dds")
	   uFileSystem:file_copy(sFile, oFile)
    end
end

function GNEW()	
  local uFileSystem = getFS()
  local iFile = uFileSystem:update_path("$game_textures$","ui\\ui_load.dds")
  local dFile = uFileSystem:update_path("$game_textures$","intro\\def.dds")
   uFileSystem:file_copy(dFile, iFile)	  
  local eFile = uFileSystem:update_path("$game_textures$","intro\\empty.dds")
  local nFile = uFileSystem:update_path("$game_textures$","intro\\nb\\nota_0.dds")
   uFileSystem:file_copy(nFile, eFile)
end

-- рождение актёра в онлайн
function actor_proxy:net_spawn( obj )
	self:init()

	self.online = true
	self.actor  = obj
end

-- уход актёра из онлайна
function actor_proxy:net_destroy()
	self:init()

	self.online = false
	self.actor  = nil
	
	self.game_readsave()
	self.game_NB()
end